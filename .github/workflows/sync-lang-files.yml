name: Sync and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  sync-lang-files:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Sync language files
      - name: Sync language files
        run: |
          # Set the directory containing the language files
          LANG_DIR="Server Pack/assets/minecraft/lang"
          
          # Change to the language directory
          cd "$LANG_DIR"
          
          # Backup the content of en_us.json
          EN_US_CONTENT=$(cat en_us.json)

          # Delete all JSON files except en_us.json
          find . -type f -name '*.json' ! -name 'en_us.json' -delete

          # List of all Minecraft language codes
          LANG_CODES=(
            "af_za" "ar_sa" "az_az" "bg_bg" "ca_es" "cs_cz" "cy_gb" "da_dk"
            "de_de" "el_gr" "en_us" "en_gb" "eo_uy" "es_ar" "es_cl" "es_ec"
            "es_es" "es_mx" "es_uy" "es_ve" "et_ee" "eu_es" "fa_ir" "fi_fi"
            "fil_ph" "fr_ca" "fr_fr" "ga_ie" "gl_es" "he_il" "hi_in" "hr_hr"
            "hu_hu" "hy_am" "id_id" "is_is" "it_it" "ja_jp" "jbo_en" "ka_ge"
            "kk_kz" "kn_in" "ko_kr" "ksh_de" "kw_gb" "la_la" "lb_lu" "lt_lt"
            "lv_lv" "mi_nz" "mk_mk" "mn_mn" "ms_my" "mt_mt" "nds_de" "nl_nl"
            "nn_no" "oc_fr" "pl_pl" "pt_br" "pt_pt" "qya_aa" "ro_ro" "ru_ru"
            "se_no" "sk_sk" "sl_si" "so_so" "sq_al" "sr_sp" "sv_se" "swg_de"
            "th_th" "tlh_aa" "tr_tr" "uk_ua" "val_es" "vi_vn" "zh_cn" "zh_tw"
          )

          # Generate all language files
          for lang in "${LANG_CODES[@]}"; do
            echo "$EN_US_CONTENT" > "$lang.json"
          done

      # Step 3: Commit and push changes
      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          
          # Stage the changes
          git add "Server Pack/assets/minecraft/lang/*.json"
          
          # Commit and push if there are changes
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Sync language files for all Minecraft locales"
            git push "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main
          fi

  release-on-tag:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'RELEASE')

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Zip Server Pack contents
      - name: Create ZIP file
        run: |
          cd "Server Pack"
          zip -r ../server_pack.zip *
        continue-on-error: false

      # Step 3: Create release
      - name: Create a new release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "release-${{ github.sha::7 }}"
          release_name: "Release ${{ github.sha::7 }}"
          body: "Automatically generated release for commit ${{ github.sha::7 }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Upload the ZIP file to the release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./server_pack.zip
          asset_name: ServerPack_${{ github.sha::7 }}.zip
          asset_content_type: application/zip
